<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.action.modules.bas.dao.FactoryDao">

  <sql id="factoryColumns">
        a.id,
        a.factoryName,
        a.factoryBuildDate,
        a.factoryAddress,
        a.factoryPhone,
        a.factoryECode,
        a.factoryBuildM,
        a.enterprise_id as "enterprise.id",
        c.enterName as "enterprise.enterName",
        a.create_by as "createBy.id",
        a.create_date,
        a.update_by as "updateBy.id",
        a.update_date,
        a.remarks,
        a.del_flag
  </sql>

  <sql id="factoryJoins">
    left join  bas_enterprise c on c.id=a.enterprise_id
  </sql>

    <!--1.根据id查询工厂信息-->
    <select id="get" resultType="Factory">
      select
        <include refid="factoryColumns"/>
      from bas_factory a
      <include refid="factoryJoins"/>
      where a.id=#{id}
    </select>

    <!--2.实现分页查询，根据工厂的名称进行查询-->
  <select id="findList" resultType="Factory">
    select
    <include refid="factoryColumns"/>
    from bas_factory a
    <include refid="factoryJoins"/>
    where a.del_flag=#{DEL_FLAG_NORMAL}
    <if test="factoryName!=null and factoryName!=''">
--     concat表示用百分号来连接factoryName
      and a.factoryName like concat('%',#{factoryName},'%')
    </if>
    order by a.update_date desc
  </select>

    <!--3.查询所有-->
  <select id="findAllList" resultType="Factory">
    select
    <include refid="factoryColumns"/>
    from bas_factory a
    <include refid="factoryJoins"/>
    where a.del_flag=#{DEL_FLAG_NORMAL}
    order by a.update_date desc
  </select>
    <!--4.添加-->
    <insert id="insert">
      insert into bas_factory(
          id,
          factoryName,
          factoryBuildDate,
          factoryAddress,
          factoryPhone,
          factoryECode,
          factoryBuildM,
          enterprise_id,
          create_by,
          create_date,
          update_by,
          update_date,
          remarks,
          del_flag
      )values (
      #{id},
      #{factoryName},
      #{factoryBuildDate},
      #{factoryAddress},
      #{factoryPhone},
      #{factoryECode},
      #{factoryBuildM},
      #{enterprise.id},
      #{createBy.id},
      #{createDate},
      #{updateBy.id},
      #{updateDate},
      #{remarks},
      #{delFlag}
      )
    </insert>
    <!--5.修改-->
  <update id="update">
    update bas_factory set
    factoryName=#{factoryName},
    factoryBuildDate=#{factoryBuildDate},
    factoryAddress=#{factoryAddress},
    factoryPhone= #{factoryPhone},
    factoryECode=#{factoryECode},
    factoryBuildM=#{factoryBuildM},
    enterprise_id= #{enterprise.id},
    update_by=#{updateBy.id},
    update_date=#{updateDate}
    where id=#{id}
  </update>

    <!--6.删除-->
  <update id="delete">
    update bas_factory set del_flag=#{DEL_FLAG_DELETE}
    where id=#{id}
  </update>






</mapper>